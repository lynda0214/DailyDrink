{"version":3,"sources":["containers/CreateOrderPage/CreateOrderPage.module.css","containers/EditOrderPage/EditOrderPage.module.css","containers/Toolbar/Toolbar.module.css","components/OrderList/Order/Order.module.css","components/OrderList/OrderList.module.css","components/OrderButton/OrderButton.module.css","containers/OrderListPage/OrderListPage.module.css","components/OrderButton/OrderButton.jsx","containers/Toolbar/Toolbar.jsx","components/OrderList/Order/Order.jsx","components/OrderList/OrderList.jsx","actions/types.js","containers/OrderListPage/OrderListPage.jsx","containers/CreateOrderPage/CreateOrderPage.jsx","containers/EditOrderPage/EditOrderPage.jsx","containers/App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","orderButton","to","className","styles","OrderButton","icon","faPlus","toolbar","Toolbar","Logo","order","props","editLink","index","title","price","addition","style","textAlign","faPen","IconButton","faTimes","onClick","delete","OrderList","console","log","this","drinks","length","map","drink","Order","key","onDeleteDrink","reduce","total","NoOrder","Component","connect","state","dispatch","id","type","orderListPage","OrderListPage","CreateOrderPage","handelEmptyClick","event","refs","newTitle","value","newPrice","onCreateOrder","parseInt","newAddition","preventDefault","alert","CreateOrder","ref","placeholder","required","SubmitBtn","EditOrderPage","match","params","oldOrder","oldTitle","oldPrice","oldAddition","onEditOrder","EditOrder","defaultValue","App","basename","process","path","exact","component","Boolean","window","location","hostname","initialState","reducer","action","newDrink","updatedArray","splice","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da8b2bc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateOrderPage\":\"CreateOrderPage_CreateOrderPage__2vxiA\",\"CreateOrder\":\"CreateOrderPage_CreateOrder__2RZE6\",\"SubmitBtn\":\"CreateOrderPage_SubmitBtn__WpD6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditOrderPage\":\"EditOrderPage_EditOrderPage__3u1GA\",\"EditOrder\":\"EditOrderPage_EditOrder__1lxEX\",\"SubmitBtn\":\"EditOrderPage_SubmitBtn__2NEMG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3jfJ1\",\"Logo\":\"Toolbar_Logo__29l45\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconButton\":\"Order_IconButton__39tSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderList\":\"OrderList_OrderList__GEEms\",\"NoOrder\":\"OrderList_NoOrder__2hU_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderButton\":\"OrderButton_OrderButton__2EVPh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderListPage\":\"OrderListPage_OrderListPage__1elnX\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nimport styles from './OrderButton.module.css';\n\nconst orderButton = () => (\n  <Link to='/order' className={styles.OrderButton}>\n    <FontAwesomeIcon icon={faPlus} />\n  </Link>\n);\n\nexport default orderButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './Toolbar.module.css';\nimport OrderButton from '../../components/OrderButton/OrderButton';\n\nconst toolbar = () => (\n  <header className={styles.Toolbar}>\n    <Link to=\"/\" className={styles.Logo}>\n      DailyDrinks\n    </Link>\n    <OrderButton />\n  </header>\n)\n\nexport default toolbar;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPen } from '@fortawesome/free-solid-svg-icons'\n\nimport styles from './Order.module.css';\n\nconst order = (props) => {\n\n    let editLink = '/edit/';\n    editLink = editLink + props.index;\n\n    return (\n        <tr>\n            <td>{props.title}</td>\n            <td>{props.price}</td>\n            <td>{props.addition}</td>\n            <td style={{textAlign: \"right\"}}>\n                <Link to={editLink}>\n                    <FontAwesomeIcon icon={faPen} className={styles.IconButton}/>\n                </Link>\n                <FontAwesomeIcon icon={faTimes} className={styles.IconButton} onClick={props.delete}/>\n            </td>\n        </tr>\n    );\n}\n\norder.propTypes = {\n  index: PropTypes.number,\n  title: PropTypes.string,\n  price: PropTypes.number,\n  addition: PropTypes.string,\n  delete: PropTypes.func,\n}\n\n\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Order from './Order/Order';\nimport * as actionTypes from '../../actions/types';\nimport styles from './OrderList.module.css';\n\nclass OrderList extends Component {\n    render () {\n        console.log(this.props.drinks);\n        return (\n            this.props.drinks.length ? <table className={styles.OrderList}>\n                <thead>\n                    <tr>\n                        <th>飲料品項</th>\n                        <th>價格</th>\n                        <th>附註</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.drinks.map((drink, index)=>(\n                        <Order\n                            key={index}\n                            index={index}\n                            title={drink.title}\n                            price={drink.price}\n                            addition={drink.addition}\n                            delete={() => this.props.onDeleteDrink(index)} />\n                    ))}\n                </tbody>\n                <tfoot>\n                    <tr>\n                        <td>杯數：{this.props.drinks.length}</td>\n                        <td>總價：{this.props.drinks.reduce((total, drink) => total += drink.price, 0)}</td>\n                        <td></td>\n                        <td></td>\n                    </tr>\n                </tfoot>\n            </table> : <h2 className={styles.NoOrder}>目前還沒有人點飲料，點擊右上角(+)點飲料</h2>\n        )\n    }\n}\n\nOrderList.propTypes = {\n  drinks: PropTypes.array,\n  onDeleteDrink: PropTypes.func,\n}\n\nconst mapStateToProps = state => {\n    return {\n        drinks: state.drinks\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDeleteDrink: (id) => dispatch({type: actionTypes.DELETE, id: id})\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderList);","export const CREATE = 'CREATE';\nexport const EDIT = 'EDIT';\nexport const DELETE = 'DELETE';","import React from 'react';\n\nimport styles from './OrderListPage.module.css';\nimport OrderList from '../../components/OrderList/OrderList';\n\nconst orderListPage = () => (\n  <div className={styles.OrderListPage}>\n    <OrderList />\n  </div>\n)\n\nexport default orderListPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport * as actionTypes from '../../actions/types';\nimport styles from './CreateOrderPage.module.css';\n\nclass CreateOrderPage extends Component {\n    handelEmptyClick = (event) => {\n        /* Both field are non-empty */\n        if (this.refs.newTitle.value !== \"\" && this.refs.newPrice.value > 0) {\n            this.props.onCreateOrder(\n                this.refs.newTitle.value,\n                parseInt(this.refs.newPrice.value),\n                this.refs.newAddition.value,\n            );\n        } else {\n            event.preventDefault(); // do nothing\n            alert('品項與價錢不能是空白');\n        }\n\n    }\n    render () {\n        return (\n            <div className={styles.CreateOrderPage}>\n                <div className={styles.CreateOrder}>\n                    <h3>點飲料</h3>\n                    <input\n                        type='text'\n                        ref='newTitle'\n                        placeholder='請輸入飲料品項名稱'\n                        required />\n                    <input\n                        type='number'\n                        ref='newPrice'\n                        placeholder='請輸入飲料價格'\n                        required />\n                    <input\n                        type='text'\n                        ref='newAddition'\n                        placeholder='請輸入附註(ex.甜度冰塊)'/>\n                    <Link to='/'>\n                        <input\n                            type='submit'\n                            className={styles.SubmitBtn}\n                            onClick={this.handelEmptyClick}\n                            value='送出'/>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        drinks: state.drinks\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateOrder: (title, price, addition) => dispatch({type: actionTypes.CREATE, title: title, price: price, addition: addition})\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateOrderPage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport * as actionTypes from '../../actions/types';\nimport styles from './EditOrderPage.module.css';\n\nclass EditOrderPage extends Component {\n\n    id = this.props.match.params.id;\n    oldOrder = this.props.drinks[this.id];\n    oldTitle = this.oldOrder.title;\n    oldPrice = this.oldOrder.price;\n    oldAddition = this.oldOrder.addition;\n\n    handelEmptyClick = (event) => {\n        /* Both field are non-empty */\n        if (this.refs.newTitle.value !== \"\" && this.refs.newPrice.value > 0) {\n            this.props.onEditOrder(\n                this.id,\n                this.refs.newTitle.value,\n                parseInt(this.refs.newPrice.value),\n                this.refs.newAddition.value,\n            );\n        } else {\n            event.preventDefault(); // do nothing\n            alert('品項與價錢不能是空白');\n        }\n\n    }\n    render () {\n        return (\n            <div className={styles.EditOrderPage}>\n              <div className={styles.EditOrder}>\n                <h3>點飲料</h3>\n                <input\n                    type='text'\n                    ref='newTitle'\n                    defaultValue={this.oldTitle}\n                    placeholder='請輸入飲料品項名稱'/>\n                <input\n                    type='number'\n                    ref='newPrice'\n                    defaultValue={this.oldPrice}\n                    placeholder='請輸入飲料價格'/>\n                <input\n                    type='text'\n                    ref='newAddition'\n                    defaultValue={this.oldAddition}\n                    placeholder='請輸入附註(ex.甜度冰塊)'/>\n\n                <Link to='/'>\n                    <input\n                        type='submit'\n                        className={styles.SubmitBtn}\n                        onClick={this.handelEmptyClick}\n                        value='送出'/>\n                </Link>\n              </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        drinks: state.drinks\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onEditOrder: (id, title, price, addition) => dispatch({type: actionTypes.EDIT, id: id, title: title, price: price, addition: addition})\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOrderPage);","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport Toolbar from './Toolbar/Toolbar';\n\nimport OrderListPage from './OrderListPage/OrderListPage';\nimport CreateOrderPage from './CreateOrderPage/CreateOrderPage';\nimport EditOrderPage from './EditOrderPage/EditOrderPage';\n\nconst App = () => (\n  <Router basename={ process.env.PUBLIC_URL }>\n    <Toolbar />\n    <Route path='/' exact component={OrderListPage}/>\n    <Route path='/order' component={CreateOrderPage}/>\n    <Route path='/edit/:id' component={EditOrderPage}/>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/types';\n\nconst initialState = {\n    drinks: [\n        {\n            title: \"珍珠奶茶\",\n            price: 50,\n            addition: '微糖去冰',\n        }\n    ]\n}\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n      case actionTypes.CREATE: {\n          const newDrink = {\n              title: action.title,\n              price: action.price,\n              addition: action.addition,\n          }\n          return {\n              drinks: [...state.drinks, newDrink]\n          }\n      }\n      case actionTypes.EDIT: {\n          const updatedArray = [...state.drinks];\n          updatedArray[action.id].title = action.title;\n          updatedArray[action.id].price = action.price;\n          updatedArray[action.id].addition = action.addition;\n          return {\n              drinks: updatedArray\n          }\n      }\n      case actionTypes.DELETE: {\n          const updatedArray = [...state.drinks];\n          updatedArray.splice(action.id, 1);\n          return {\n              drinks: updatedArray\n          }\n      }\n      default:\n          return state;\n\n  }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore} from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}